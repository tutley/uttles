"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","angularMoment","updateMeta","ngSanitize","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("chat"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("replies"),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),ApplicationConfiguration.registerModule("uttles"),angular.module("chat").run(["Menus",function(Menus){}]),angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/client/views/chat.client.view.html",data:{roles:["user","admin"]}})}]),angular.module("chat").controller("ChatController",["$scope","$location","Authentication","Socket",function($scope,$location,Authentication,Socket){$scope.messages=[],Authentication.user||$location.path("/"),Socket.socket||Socket.connect(),Socket.on("chatMessage",function(message){$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"About",state:"about",roles:["*"]})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/oldhome",templateUrl:"modules/core/client/views/home.client.view.html"}).state("about",{url:"/about",templateUrl:"modules/core/client/views/about.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]),angular.module("core").controller("AboutController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("autofocus",["$timeout",function($timeout){return{restrict:"A",link:function($scope,$element){$timeout(function(){$element[0].focus()})}}}]),angular.module("core").directive("shareLinks",["$location",function($location){return{link:function(scope,elem,attrs){var i,theLink,sites=["twitter","facebook","linkedin","google-plus"],links=attrs.shareLinks.toLowerCase().split(","),pageLink=encodeURIComponent($location.absUrl().replace(/uttle\//i,"perma/")),pageTitle=attrs.shareTitle,pageTitleUri=encodeURIComponent(pageTitle),shareLinks=[],square="";for(elem.addClass("td-easy-social-share"),square=attrs.shareSquare&&"true"===attrs.shareSquare.toString()?"-square":"",angular.forEach(links,function(key){switch(key=key.trim()){case"twitter":theLink="http://twitter.com/intent/tweet?text="+pageTitleUri+"%20"+pageLink;break;case"facebook":theLink="http://facebook.com/sharer.php?u="+pageLink;break;case"linkedin":theLink="http://www.linkedin.com/shareArticle?mini=true&url="+pageLink+"&title="+pageTitleUri;break;case"google-plus":theLink="https://plus.google.com/share?url="+pageLink}sites.indexOf(key)>-1&&shareLinks.push({network:key,url:theLink})}),i=0;i<shareLinks.length;i++){var anchor="";anchor+='<a href="'+shareLinks[i].url+'"',anchor+=' class="fa fa-'+shareLinks[i].network+square+'" target="_blank"',anchor+="></a>",elem.append(anchor)}}}}]),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("replies").run(["Menus",function(Menus){}]),angular.module("replies").config(["$stateProvider",function($stateProvider){$stateProvider.state("replies",{"abstract":!0,url:"/uttle",template:"<ui-view/>"}).state("replies.view",{url:"/:replyId?scrollTo",templateUrl:"modules/replies/client/views/view-reply.client.view.html"})}]),angular.module("replies").run(["$anchorScroll",function($anchorScroll){$anchorScroll.yOffset=50}]).controller("RepliesController",["$scope","$stateParams","$anchorScroll","$location","Authentication","Replies","RecursionHelper",function($scope,$stateParams,$anchorScroll,$location,Authentication,Replies,RecursionHelper){$scope.authentication=Authentication,$scope.topReply={},$scope.topReplyCollapsed=!0,$scope.topReplyAvailable=Authentication.user,$scope.previewIsCollapsed=!0,$scope.everyone=!0;var scrollTo=$stateParams.scrollTo;$scope.replies=[],$scope.$watch("replies",function(newValue,oldValue){if(newValue.$resolved){var newHash="reply"+scrollTo;$location.hash(newHash),$anchorScroll(),$location.hash(null)}}),$scope.showReplyForm=function(replyId){Authentication.user||$location.path("/authentication/signin"),$scope.currentReplyId=replyId},$scope.cancelReply=function(){$scope.currentReplyId=null},$scope.prepareDelete=function(replyId){$scope.replyToDelete=replyId},$scope.cancelDelete=function(){$scope.replyToDelete=null},$scope.prepareEdit=function(reply){reply.newContent=reply.content,$scope.replyToEdit=reply._id},$scope.cancelEdit=function(){$scope.replyToEdit=null},$scope.showAll=function(){$scope.everyone=!0},$scope.showFollowing=function(){$scope.everyone=!1},$scope.create=function(currentReply){if(currentReply.error=null,!currentReply.newReply)return currentReply.error="The reply was empty!",!1;var newReplyLevel=currentReply.nestedLevel+1;if(newReplyLevel>9)return currentReply.error="how the hell did you do that?",!1;var reply=new Replies({content:currentReply.newReply,uttle:currentReply.uttle,replyTo:currentReply._id,nestedLevel:newReplyLevel});reply.$save(function(response){currentReply.replies.unshift(response),currentReply.newReply="",$scope.currentReplyId=null},function(errorResponse){currentReply.error=errorResponse.data.message})},$scope.remove=function(reply){if(reply){var deadManWalking=new Replies(reply);deadManWalking.$remove({},function(value){reply.isDeleted=!0},function(error){reply.error=error.data.message})}},$scope.update=function(currentReply){if(currentReply.error=null,!currentReply.newContent)return currentReply.error="The reply was empty!",!1;if(currentReply.newContent===currentReply.content)return currentReply.error="You did not change anything!",!1;var reply=new Replies(currentReply);reply.content=currentReply.newContent,reply.$update(function(response){currentReply.content=response.content,currentReply.edited=response.edited,$scope.replyToEdit=null},function(errorResponse){currentReply.error=errorResponse.data.message})},$scope.find=function(){var uttleId=$stateParams.uttleId;$scope.showAll(),Replies.query({uttle:uttleId},function(response){$scope.replies=response,$scope.isCollapsed={},angular.forEach($scope.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1})})})})})})})})})})},$scope.findOne=function(){$scope.showAll(),Replies.get({replyId:$stateParams.replyId},function(reply){$scope.isCollapsed={},$scope.reply=reply,reply.uttle.submitters.indexOf(Authentication.user._id)>-1&&($scope.topReplyAvailable=!1),angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1,angular.forEach(reply.replies,function(reply){$scope.isCollapsed[reply._id]=!1})})})})})})})})},function(response){404===response.status&&$location.path("/not-found"),400===response.status&&$location.path("/bad-request")})}}]),angular.module("replies").directive("showReplies",["RecursionHelper",function(RecursionHelper){return{restrict:"E",scope:!1,templateUrl:"/modules/replies/client/views/show-replies.client.view.html",compile:function(element){return RecursionHelper.compile(element)}}}]),angular.module("replies").factory("RecursionHelper",["$compile",function($compile){return{compile:function(element,link){angular.isFunction(link)&&(link={post:link});var compiledContents,contents=element.contents().remove();return{pre:link&&link.pre?link.pre:null,post:function(scope,element){compiledContents||(compiledContents=$compile(contents)),compiledContents(scope,function(clone){element.append(clone)}),link&&link.post&&link.post.apply(null,arguments)}}}}}]),angular.module("replies").factory("Replies",["$resource",function($resource){return $resource("api/replies/:replyId",{replyId:"@_id"},{get:{method:"GET",cache:!1},query:{method:"GET",cache:!1,isArray:!0},update:{method:"PUT"}})}]),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Prolific",state:"prolific",roles:["*"]})}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.follow",{url:"/follow",templateUrl:"modules/users/client/views/settings/follow.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.notifications",{url:"/notifications",templateUrl:"modules/users/client/views/settings/notifications.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"}).state("profiles",{"abstract":!0,url:"/p",template:"<ui-view/>"}).state("profiles.user",{url:"/:username?page&perPage",templateUrl:"modules/users/client/views/profile/view-profile.client.view.html"}).state("prolific",{url:"/prolific",templateUrl:"modules/users/client/views/profile/view-prolific.client.view.html"})}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"uttles.list",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"uttles.list",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("ProfilesController",["$scope","$stateParams","$location","Profiles","Follow","Authentication","$http",function($scope,$stateParams,$location,Profiles,Follow,Authentication,$http){function applyProfile(profile){$scope.profile=profile,Authentication.user.following.indexOf(profile._id)>-1&&($scope.isFollowed=!0),Authentication.user._id===profile._id&&($scope.isMe=!0),$scope.userReplies(1)}function applyReplies(rObject){$scope.theReplies=rObject.replies,$scope.perPage=rObject.perPage,$scope.totalReplies=rObject.total,$scope.totalPages=Math.ceil($scope.totalReplies/$scope.perPage)}function applyTopByReplies(topByReplies){$scope.topByReplies=topByReplies}function applyTopBySubmissions(topBySubmissions){$scope.topBySubmissions=topBySubmissions}function applyTopByFollowers(topByFollowers){$scope.topByFollowers=topByFollowers}$scope.user=Authentication.user,$scope.currentPage=1,$scope.error=null,$scope.repliesError=null,$scope.perPage=10,$scope.totalPages=Math.ceil($scope.totalReplies/$scope.perPage)||1,$scope.findByUsername=function(){Profiles.findByUsername($stateParams.username).then(function(profile){applyProfile(profile)},function(errorMessage){$scope.error=errorMessage})},$scope.userReplies=function(pageTo){var userId=$scope.profile._id,perPage=$scope.perPage;Profiles.userReplies(pageTo,perPage,userId).then(function(response){applyReplies(response)},function(errorMessage){$scope.repliesError=errorMessage})},$scope.findProlific=function(){Profiles.findTopByReplies().then(function(topByReplies){applyTopByReplies(topByReplies)}),Profiles.findTopBySubmissions().then(function(topBySubmissions){applyTopBySubmissions(topBySubmissions)}),Follow.mostFollowers().then(function(topByFollowers){applyTopByFollowers(topByFollowers)})},$scope.follow=function(userId){Follow.followUser(userId).then(function(user){$scope.isFollowed=!0},function(errorMessage){$scope.error=errorMessage})},$scope.unfollow=function(userId){Follow.unfollowUser(userId).then(function(user){$scope.isFollowed=!1},function(errorMessage){$scope.error=errorMessage})}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("FollowController",["$scope","$http","$location","Follow","Authentication",function($scope,$http,$location,Follow,Authentication){function applyFollowers(followers){$scope.followers=followers}function applyFollowing(following){$scope.following=following}$scope.user=Authentication.user,$scope.findFollows=function(){Follow.getFollowers().then(function(followers){applyFollowers(followers)}),Follow.getFollowing().then(function(following){applyFollowing(following)})}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("NotificationsController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.user=Authentication.user,$scope.error=null,$scope.find=function(){$http({url:"/api/user/notifications/",
method:"GET"}).then(function(result){$scope.notifications=result.data},function(error){$scope.error=error.message})},$scope.markRead=function(notification){notification.read||$http({url:"/api/user/notification/"+notification._id,method:"PUT"}).then(function(result){for(var nIndex=-1,i=0,len=Authentication.user.notifications.length;len>i;i++)if(Authentication.user.notifications[i]._id===notification._id){nIndex=i;break}nIndex>-1&&Authentication.user.notifications.splice(nIndex,1),notification.read=!0},function(error){$scope.error=error.message})},$scope.archive=function(notification){$http({url:"/api/user/notification/"+notification._id,method:"DELETE"}).then(function(result){console.log(result);for(var nIndex=-1,i=0,len=Authentication.user.notifications.length;len>i;i++)if(Authentication.user.notifications[i]._id===notification._id){nIndex=i;break}nIndex>-1&&Authentication.user.notifications.splice(nIndex,1),notification.read=!0;var nIndex2=$scope.notifications.indexOf(notification);console.log("index found: "+nIndex2),$scope.notifications.splice(nIndex2,1)},function(error){$scope.error=error.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin!==password?!1:!0})})}}}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Follow",["$http","$q",function($http,$q){function followUser(userId){var request=$http({url:"/api/user/follow/"+userId,method:"PUT"});return request.then(handleSuccess,handleError)}function unfollowUser(userId){var request=$http({url:"/api/user/unfollow/"+userId,method:"PUT"});return request.then(handleSuccess,handleError)}function getFollowers(){var request=$http({url:"/api/user/followers",method:"GET"});return request.then(handleSuccess,handleError)}function getFollowing(){var request=$http({url:"/api/user/following",method:"GET"});return request.then(handleSuccess,handleError)}function mostFollowers(){var request=$http({url:"/api/user/top/followers",method:"GET"});return request.then(handleSuccess,handleError)}function handleError(response){return angular.isObject(response.data)&&response.data.message?$q.reject(response.data.message):$q.reject("An unknown error occurred.")}function handleSuccess(response){return response.data}return{followUser:followUser,unfollowUser:unfollowUser,getFollowers:getFollowers,getFollowing:getFollowing,mostFollowers:mostFollowers}}]),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]),angular.module("users").factory("Profiles",["$http","$q",function($http,$q){function findByUsername(username){var request=$http({url:"/api/user/profile/"+username,method:"GET"});return request.then(handleSuccess,handleError)}function userReplies(pageTo,perPage,userId){var page=pageTo||1,request=$http({url:"/api/user/replies/"+userId,method:"GET",params:{perPage:perPage,page:page}});return request.then(handleSuccess,handleError)}function findTopByReplies(){var request=$http({url:"/api/user/top/replies",method:"GET"});return request.then(handleSuccess,handleError)}function findTopBySubmissions(){var request=$http({url:"/api/user/top/submissions",method:"GET"});return request.then(handleSuccess,handleError)}function handleError(response){return angular.isObject(response.data)&&response.data.message?$q.reject(response.data.message):$q.reject("An unknown error occurred.")}function handleSuccess(response){return response.data}return{findByUsername:findByUsername,userReplies:userReplies,findTopByReplies:findTopByReplies,findTopBySubmissions:findTopBySubmissions}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{get:{method:"GET",cache:!1},query:{method:"GET",cache:!1,isArray:!0},update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]),angular.module("uttles").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Create",state:"uttles.start",roles:["*"]})}]),angular.module("uttles").config(["$stateProvider",function($stateProvider){$stateProvider.state("uttles",{"abstract":!0,url:"/",template:"<ui-view/>"}).state("uttles.list",{url:"?page&perPage&sort&alltime&everyone&tag&q",templateUrl:"modules/uttles/client/views/list-uttles.client.view.html",params:{page:{value:"1",squash:"true"},perPage:{value:"10",squash:"true"},sort:{value:"submissions",squash:"true"},alltime:{value:"0",squash:"true"},everyone:{value:"1",squash:"true"}}}).state("uttles.tag",{url:"tag/:tag?page&perPage&sort&everyone&alltime&q",templateUrl:"modules/uttles/client/views/list-uttles.client.view.html",params:{page:{value:"1",squash:"true"},perPage:{value:"10",squash:"true"},sort:{value:"submissions",squash:"true"},alltime:{value:"0",squash:"true"},everyone:{value:"1",squash:"true"}}}).state("uttles.start",{url:"create?url",templateUrl:"modules/uttles/client/views/start-uttle.client.view.html",data:{roles:["user","admin"]}}).state("uttles.create",{url:"create/:uttleId",templateUrl:"modules/uttles/client/views/create-uttle.client.view.html",data:{roles:["user","admin"]}}).state("uttles.view",{url:":uttleId?scrollTo",views:{"@":{templateUrl:"modules/uttles/client/views/view-uttle.client.view.html"},"replies@uttles.view":{templateUrl:"modules/replies/client/views/list-replies.client.view.html",controller:"RepliesController"}}}).state("uttles.edit",{url:":uttleId/edit",templateUrl:"modules/uttles/client/views/edit-uttle.client.view.html",data:{roles:["user","admin"]}})}]);var PAGINATION_TOTAL="pagination-total-elements",PAGINATION_SIZE="pagination-size";angular.module("uttles").controller("UttlesController",["$scope","$state","$stateParams","$location","Authentication","Uttles","Replies","$sce",function($scope,$state,$stateParams,$location,Authentication,Uttles,Replies,$sce){function createTopLevelReply(uttle,content){var reply=new Replies({content:content,uttle:uttle._id,nestedLevel:1});reply.$save(function(response){$location.path("/uttle/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})}$scope.authentication=Authentication,$scope.newUttle={},$scope.previewIsCollapsed=!0,$scope.alltime=$stateParams.alltime,$scope.sort=$stateParams.sort,$scope.userHasUttle=!1,$scope.error=null,$scope.url=$stateParams.url,$scope.everyone=$stateParams.everyone,$scope.previewToggle=function(previewCurrentlyCollapsed){previewCurrentlyCollapsed?($scope.previewHtml=$sce.trustAsHtml($scope.uttle.contentHtml),$scope.previewIsCollapsed=!1):($scope.previewHtml="",$scope.previewIsCollapsed=!0)},$scope.start=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","uttleForm"),!1;var endOfUrl=this.url.length,qPos=this.url.indexOf("?utm_"),pPos=this.url.indexOf("#");qPos>-1&&(endOfUrl=qPos),pPos>-1&&endOfUrl>pPos&&(endOfUrl=pPos);var finalUrl=this.url.substr(0,endOfUrl),uttle=new Uttles({url:finalUrl});uttle.$save(function(response){$scope.uttle=response.uttle;({u:response.existed});$location.path("/create/"+response.uttle._id),$scope.url=""},function(errorResponse){404===errorResponse.status?$scope.error="We were not able to process that link. This is really odd, so please report this problem.":$scope.error=errorResponse.data.message})},$scope.create=function(){$scope.createErrors={};var newUttle=$scope.newUttle,uttle=$scope.uttle;uttle.title||(uttle.title=newUttle.title),uttle.summary||(uttle.summary=newUttle.summary),uttle.tags=newUttle.tags;var content=newUttle.content;if(!uttle.title&&!newUttle.title)return $scope.createErrors.title=!0,!1;if(!uttle.summary&&!newUttle.summary)return $scope.createErrors.summary=!0,!1;var totalTags=0;return uttle.tags&&(totalTags=uttle.tags.length),totalTags>12?($scope.createErrors.tags=!0,!1):content?angular.equals({},newUttle)&&uttle.summary&&uttle.title?void createTopLevelReply(uttle,content):void uttle.$update(function(){$scope.newUttle={},createTopLevelReply(uttle,content)},function(errorResponse){$scope.error=errorResponse.data.message}):($scope.createErrors.content=!0,!1)},$scope.remove=function(uttle){if(uttle){uttle.$remove();for(var i in $scope.uttles)$scope.uttles[i]===uttle&&$scope.uttles.splice(i,1)}else $scope.uttle.$remove(function(){$location.path("")})},$scope.update=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","uttleForm"),!1;var uttle=$scope.uttle;uttle.tags=$scope.tags,uttle.$update(function(){$scope.tags={},$location.path("/"+uttle._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){var qObject={};$stateParams.tag&&(qObject.tag=$stateParams.tag),qObject.page=$stateParams.page,qObject.perPage=$stateParams.perPage,qObject.alltime=$stateParams.alltime,qObject.everyone=$stateParams.everyone,qObject.sort=$stateParams.sort,$stateParams.q&&(qObject.search=$stateParams.q),Uttles.query(qObject,function(result,headers){$scope.uttles=result,$scope.totalUttles=headers(PAGINATION_TOTAL),$scope.perPage=headers(PAGINATION_SIZE),$scope.currentPage=$stateParams.page})},$scope.pageChanged=function(pageTo){var newParams=angular.extend({},$stateParams,{page:pageTo});$state.go("uttles.list",newParams)},$scope.relist=function(thisParam){var newParams=angular.extend({},$stateParams,thisParam);$scope.page=1,$state.go("uttles.list",newParams)},$scope.findOne=function(){Uttles.get({uttleId:$stateParams.uttleId},function(result){$scope.uttle=result,$scope.userHasUttle=result.submitters.indexOf(Authentication.user._id)>-1},function(response){404===response.status&&$location.path("/not-found"),400===response.status&&$location.path("/bad-request")})}}]);var PAGINATION_TOTAL="pagination-total-elements",PAGINATION_SIZE="pagination-size";angular.module("uttles").factory("Uttles",["$resource",function($resource){return $resource("api/uttles/:uttleId",{uttleId:"@_id"},{get:{method:"GET",cache:!1},update:{method:"PUT"},query:{method:"GET",cache:!1,isArray:!0,transformResponse:function(data,headers){var jsonData=JSON.parse(data);return headers()[PAGINATION_TOTAL]=jsonData.totalUttles,headers()[PAGINATION_SIZE]=jsonData.perPage,jsonData.content}}})}]);